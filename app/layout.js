// app/layout.js
import localFont from "next/font/local";
import Script from "next/script";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "AgentX",
  description: "Generated by e8-labs",
  manifest: "/manifest.json",
  openGraph: {
    title: "Create Your AI Agent - AgentX",
    description: "Design and create custom AI agents with ease.",
    url: "https://ai.myagentx.com/createagent",
    images: [
      {
        url: "https://ai.myagentx.com/thumbOrbSmall.png",
        width: 276,
        height: 276,
        alt: "Thumbnail Alt Text",
      },
    ],
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Create Your AI Agent - AgentX",
    description: "Design and create custom AI agents with ease.",
    images: ["https://ai.myagentx.com/thumbOrb.png"],
  },
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <link rel="manifest" href="/manifest.json" />

        {/* Fonts */}
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="anonymous"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Edu+AU+VIC+WA+NT+Arrows:wght@400..700&display=swap"
          rel="stylesheet"
        />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="anonymous"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap"
          rel="stylesheet"
        />

        {/* Step 1 – Visitor tracking script */}
        {/*<Script
          id="agentx-visitor-tracking"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: `(function(){
            console.log("[AgentX Tracking] Injecting am.js...");
            var t=document.createElement("script");
            t.type="text/javascript";
            t.async=!0;
            t.src='https://set.myagentx.com/js/am.js';
            t.onload=t.onreadystatechange=function(){
              var s=this.readyState;
              if(!s||"complete"==s||"loaded"==s){
                try{
                  console.log("[AgentX Tracking] am.js loaded, initializing affiliateManager...");
                  affiliateManager.init(
                    'UoIYax6ZF0P9Ds6xa6mC',
                    'https://backend.leadconnectorhq.com',
                    '.myagentx.com'
                  );
                  console.log("[AgentX Tracking] affiliateManager initialized:", affiliateManager);
                }catch(e){
                  console.error("[AgentX Tracking] Initialization error:", e);
                }
              }
            };
            var e=document.getElementsByTagName("script")[0];
            e.parentNode.insertBefore(t,e);
          })();`,
          }}
        />*/}

        <Script
          id="agentx-visitor-tracking"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: `(function() {
                var t = document.createElement("script");
                t.type = "text/javascript", t.async = !0, t.src = 'https://set.myagentx.com/js/am.js', t.onload = t.onreadystatechange = function() {
                    var t = this.readyState;
                    if (!t || "complete" == t || "loaded" == t) try {
                      affiliateManager.init('UoIYax6ZF0P9Ds6xa6mC', 'https://backend.leadconnectorhq.com', '.agentx-git-test-salman-majid-alis-projects.vercel.app')
                    } catch (t) {}
                };
                var e = document.getElementsByTagName("script")[0];
                e.parentNode.insertBefore(t, e)
            })();`,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        style={{ fontFamily: "Inter" }}
      >
        {children}

        {/* Step 2 – Signup tracking helper */}
        <Script id="agentx-signup-helper" strategy="afterInteractive">
          {`
            window.agentxTrackSignup = function(email, uid = null) {
              const trySignup = () => {
                if (window.affiliateManager && typeof window.affiliateManager.trackLead === "function") {
                  console.log("[AgentX Tracking] Sending signup event...", { email, uid });
                  const trackingData = { email };
                  if (uid) trackingData.uid = uid;
                  
                  setTimeout(() => {
                    console.log("[AgentX Tracking] Calling trackLead with:", trackingData);
                    affiliateManager.trackLead(trackingData);
                  }, 1000);
                } else {
                  console.warn("[AgentX Tracking] trackLead method not found on affiliateManager", window.affiliateManager);
                }
              };

              if (document.readyState === "complete") {
                trySignup();
              } else {
                window.addEventListener("load", trySignup);
              }
            };

          `}
        </Script>
      </body>
    </html>
  );
}
